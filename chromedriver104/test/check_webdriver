#!/bin/bash
set -e

# Script level settings
cwd=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
image="$1"
pid=${BASHPID}

cname=test${pid}_1
source "${cwd}/../../_tools/helpers/common.sh"

# destroy containers and remove trash
cleanup() {
    set +e
    docker stop $cname &>/dev/null
    docker rm -vf $cname &>/dev/null
    set -e
}
trap cleanup EXIT

run_test() {
	local ip="$1"
	local url="$2"
	local xpath="$3"

	# Init session
	response="$(curl -XPOST -s "${ip}:4444/wd/hub/session" -d '{
		"desiredCapabilities":{
			"platform":"ANY",
			"browserName":"chrome",
			"version": "",
			"chromeOptions":{
				"args":["no-sandbox"],
				"extensions":[]
			},
			"chrome.switches":[],
			"name":"CLI_TEST",
			"deviceOrientation":"landscape",
			"deviceType":"desktop",
			"selenium-version":"2.31.0",
			"max-duration":30
		},
		"requiredCapabilities":[]
	}')"
	local session=$(echo $response |sed -nr 's/.*"sessionId":"([^"]*)".*/\1/p')

	# Load page
	curl -XPOST -s "${ip}:4444/wd/hub/session/${session}/url" -d '{
		"url": "'"${url}"'"
	}' &> /dev/null

	# Look for element
	response="$(curl -s -XPOST "${ip}:4444/wd/hub/session/${session}/element" -d '{
		"using":"xpath",
		"value":"'"${xpath}"'"
	}')"

	if  echo "$response" | grep -q 'status":0' ; then
		return 0
	fi

	echo "xPath: $xpath not found in url: $url"
	return 1
}

docker run --name "$cname" -d $image &>/dev/null
box_ip=$(get_container_ip $cname)

wait_for_connection $box_ip:4444
run_test $box_ip "http://example.org" "/html/body/div/h1[text()='Example Domain']"

exit 0

